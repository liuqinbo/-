let $ = {
    get(options) {
        this.ajax("get", options);
    },
    post(options) {
        this.ajax("post", options);
    },
    ajax(type, options) {
        let { url, data, successCallBack, errorCallBack, time } = options;
        time = time || 10000;

        /* 01-创建请求对象 */
        let xhr = new XMLHttpRequest();
        /* 02-把参数转换为查询字符串 */
        let queryStr = this.obj2QueryString(data);

        /* 03-区分是GET请求还是POST请求 */
        if (type == "get") {
            url += queryStr.length == 0 ? "?t=" + Math.random() : "?" + queryStr;
            url = encodeURI(url);
            xhr.open("get", url, true);
            xhr.send();
        } else if (type == "post") {
            xhr.open("post", url, true);
            xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhr.send(queryStr);
        }

        let timer = setTimeout(() => {
            xhr.abort(); //取消网络请求
            alert("网络繁忙，请检查您的网络!");
        }, time);

        /* 04-监听网络请求状态的改变 */
        xhr.onreadystatechange = () => {
            // xhr.readyState == 状态（0，1，2，3，4），而且状态也是不可逆的：
            // 0：请求未初始化，还没有调用 open()。
            // 1：请求已经建立，但是还没有发送，还没有调用 send()。
            // 2：请求已发送，正在处理中（通常现在可以从响应中获取内容头）。
            // 3：请求在处理中；通常响应中已有部分数据可用了，没有全部完成。
            // 4：响应已完成；您可以获取并使用服务器的响应了
            if (xhr.readyState == 4) {
                clearTimeout(timer);
                /* 05-获取服务器返回的数据 */
                xhr.status == 200 ? successCallBack(xhr) : errorCallBack(xhr);
            }
        }
    },
    obj2QueryString(data) {
        let arr = [];
        for (let key in data) {
            arr.push(key + "=" + data[key]);
        }
        return arr.join("&");
    }
}
