# study-file
学习文档
1.修改vue的指定端口号，在跟目录下创建一个vue.config.js
代码如下
    module.exports = {
      devServer: {
        port: 3000, // 端口
      },
    }
2.遇到的错误
sockjs其实其作用就是保证我们在改完代码重新编译之后，能够通知浏览器重新加载变更结果

vue-cli3 一直运行 /sockjs-node/info?t= 
解决方案 
如果你的项目没有用到 sockjs，vuecli3 运行 npm run serve 之后 network 里面一直调研一个接口：http://localhost:8080/sockjs-node/info?t=1462183700002

1. 找到/node_modules/sockjs-client/dist/sockjs.js 

2.找到代码的 1755行  

  try {
      //  self.xhr.send(payload); 把这里注掉
      } catch (e) {
        self.emit('finish', 0, '');
        self._cleanup(false);
      }

3.上线时出现connection_refused
是因为host地址(ip地址)不让访问，所以出现错误，将dev(vue.config.js文件中)中的host改为可以访问的IP地址就行，如服务器端的ip，或者自己的IP地址
devServer: {
        port: 7000, // 端口
        sockHost: '10.0.0.0', //改为可以访问的地址
        disableHostCheck: true,
 },


总结：上线时要将2.3搞好再提交

4.用scss或less就可以把单独的样式文件变成一个局部的样式

5.keep-alive的include和exclude的是写的是组件名，但是不是写在路由那里，是要写在单文件组件里面

6.process.env.NODE_ENV 判断当前的环境
  //开发与生产环境用不同的接口
  let ssoUrl=null
  let picUrl=null
  if(process.env.NODE_ENV=='development'){  //开发环境
    开发环境的接口地址
  }else{
    生产环境的接口地址
  }

7.navigator.userAgent 用来判断是手机端还是pc端
 //判断是否是手机打开
 if(/Android|webOS|iPhone|iPad|BlackBerry/i.test(navigator.userAgent)) {
  window.console.log('手机打开')
 }else{
  window.console.log('其他打开')
 }
8.二级目录
(1)路由那里加给base:'二级目录名称'
mode: 'hash', // 默认hash
base:'/mob/',	
(2)vue.config.js里加  publicPath:'二级目录名称'
module.exports = {
    publicPath:'/mob/',
    devServer: {
        port: 80, // 端口
    }
}
9.style 不加scope就能修改ui框架的默认样式

10. 打包时隐藏源码  在vue.config.js 中设置 productionSourceMap ：false

11.css样式鼠标不可点 cursor:not-allowed; pointer-events:none(禁止触发事件，鼠标样式禁止）

12.vue axios取消请求

 async send(){
      try{
      this.source=axios.CancelToken.source()
      axios({
          method:'post',
          url:'https://sso.api.gzzwyx.cn/index/login',
          data:{
            userName: "sdfsdfs",
            passWord: "dfsdfd"
          },
          cancelToken:this.source.token
        }).catch((thrown)=>{
          if(axios.isCancel(thrown)){
            window.console.log(thrown.message,this.source.token)
          }
        })
      }catch(error){
        window.console.log(error,this.source.token)
      }
      
    },
    cancel(){
      this.source.cancel('取消请求')
    }
    
13.打包会要有一个配置文件写在public里(因为里面的代码不会build)写一个js代码全局对象，然后在index.html用<srcipt>标签引入js配置文件，然后在项目里就可以用window直接充值配置文件里的东西了，build后也不响应

14.如果是用ip地址访问的网站的话用meta设置默认使用内核是无效的，依然会用ie内核

15.antd design of vue 自定义主题
vue.config.js 配置
.babelrc 配置

16.autocomplete="off" 在谷歌保存密码后没有用 要用 autocomplete="new-password" 才有效

17. 复制
    <label>原生JS的复制实现</label>
    <input id="text" placeholder="复制内容"/>
    <button id="copy">复制</button>
    <script>
        let text=document.getElementById('text')
        let copy=document.getElementById('copy')
        copy.onclick=()=>{
            if(!text.value){
                alert('复制内容不能为空')
                return
            }
            let oInput = document.createElement('input'); //创建一个标签
            oInput.value = text.value;//把值赋给他
            document.body.appendChild(oInput);//插入
            oInput.select(); // 选择对象;
            document.execCommand("Copy"); // 执行浏览器复制命令
            if(oInput.value){
                alert('复制成功');
            }else{
                alert('复制失败')  
            }
            oInput.remove() //删除标签
        }
    </script>

18.在vue中使用setInterval时记得在钩子函数中销毁，不然会让内存溢出。销毁是最好用异步的方式套个setTimeout不然可能会无法销毁，特别是异步请求里使用一定要用

19.element自定义主题颜色
创建scss文件 如 liu.scss
然后在main里面引入scss文件就可以了，当然如果没有引入scss模块要记得引入

20. -webkit-tap-highlight-color:transparent;   去手机点击时的阴影

21.\u0022 正则中表示双引号

22.vue 的插槽用法
//普通具名插槽
<slot name="插槽名"></slot>
<template v-slot:插槽名></template>
//具名作用域插槽
<slot name="插槽名" v-bind:变量名="变量名"> </slot>
<template v-slot:插槽名="变量名">
   {{变量名}}
</template>
